import React,{useState, useEffect } from 'react';
import styles from "../styles/BlogPost.module.css";
import Head from 'next/head'
// import * as fs from 'fs';
import Link from "next/link";
import InfiniteScroll from 'react-infinite-scroll-component';

const Blog = (props) => {
    const [blogs, setBlogs]= useState([]);
    const [count, setCount] = useState(2)

    useEffect(() =>{
         fetch(`http://localhost:3000/api/blogs`)
        .then(res => res.json())
        .then((data) =>setBlogs(data));
    },[]);

    const fetchData = async () => {
        // let d = await fetch(`http://localhost:3000/api/blogs?count=${count + 2}`)
        // setCount(count + 2)
        // let data = await d.json()
        // setBlogs(data)
    };

    const Loading = () => {
        return(
            <>
            <div className={styles.loading}>
                <h2>Loading...</h2>
            </div>
            </>
        )
    }

    return (
        <>
        <Head>
            <title>Blog</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="keywords" content="javascript, reactjs, css, nextjs, huntingcoders, hunting coder blog,"/>
            <link rel="icon" href="/nextjs-icon.png" />
        </Head>
        <div className={styles.blogpostContiner}>
      
            <InfiniteScroll
                dataLength={blogs.length}
                next={fetchData}
                hasMore={props.allCount !== blogs.length}
                loader={Loading()}
                // endMessage={
                //     <p style={{ textAlign: 'center' }}>
                //         <b>Yay! You have seen it all</b>
                //     </p>
                // }
                >
                {  blogs.slice(0,5).map((item) =>{
                    return(
                        <>
                            <div className={styles.blogsWrapper} key={item.title}>
                                <div className={styles.blogItem}>
                                        <h3 className={styles.blogTitle}>
                                        {item.title}
                                        </h3>
                                    <p>{item.content.substr(0,150)}....</p>
                                    <Link href={`/blogpost/${item.slug}`}>
                                      <button className={styles.ReadMoreBtn}>Read More</button>            
                                    </Link>
                                </div> 
                            </div>
                        </>
                    )
                    })
                } 
            </InfiniteScroll>
        </div>   
        </>
    )
}

// export async function getStaticProps(context) {
//     let data = await fs.promises.readdir("BlogsData");
//     let allCount = data.length;
//     let myfile;
//     let allBlogs = [];
//     for (let index = 0; index < 2; index++) {
//       const item = data[index];
//       myfile = await fs.promises.readFile(('BlogsData/' + item), 'utf-8')
//       allBlogs.push(JSON.parse(myfile))
//     }
   
//     return {
//       props: { allBlogs, allCount },
//     }
//   }

export default Blog